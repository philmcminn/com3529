Q) Which of these subsumption hierarchies is correct?
(Where ">" means "subsumes")

1. Path > Branch > Statement
2. Statement > Branch > Path
3. MCDC > Branch > Statement
4. Multiple Condition > MCDC > Condition

A. 1 and 4 only
B. 2 only
C. * 1, 3, and 4 only
D. 1 only

Q) Which of the following statements are FALSE?

1. Covering all the paths in a program is not sensible when there are unbounded
loops
2. Branches comprise of all the edges in a CFG
3. The nodes of a CFG correspond to individual program statements
4. A test suite that covers all the branches of a program will also cover all of
its statements

* A. 2 and 3 only
B. 1 and 4 only
C. 2 only
D. 1 only

Q) Which of the following statements are TRUE?

1. If we have 100% coverage of a program, we will find all the bugs in it.
2. A coverage criterion A subsumes B if by achieving full coverage of A, we have
achieved full coverage of B
3. Black-box coverage criteria examine the internal structure of a piece of
software to devise test requirements
4. A test requirement is the same as a test case

A. All of them
B. 1, 3 and 4 only
* C. 2 only
D. 4 only

Q) Which of the following statements are TRUE?

1. 50% Statement Coverage represents higher program coverage than 25% Branch
Coverage
2. Coverage Level is the percentage of the number of test requirements of the
coverage criterion that the test suite fulfils
3. An infeasible test requirement is when there is no test case that could be
written to fulfil the test requirement
4. Coverage Level is the percentage of bugs a test suite finds in a program

A. 1, 2 and 3 only
B. 1, 2 and 4 only
C. 2 and 4 only
* D. 2 and 3 only

Q) Take the following program. CFG node labels appear in comments like this: /* A */

public int fib(int count) {
    int num1 = 0;
    int num2 = 1;

    for (int i = 1 /* A */; i <= count /* B */ ; ++i /* X */)
    {
        int sumOfPrevTwo = num1 + num2; /* C */
        num1 = num2;
        num2 = sumOfPrevTwo;
    }
    
    return num2; /* D */ 
}

Where does the edge from node X go to?

A, * B, C, or D?